"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5187],{2585:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"vue-2-version/guide/promise-lazy-factory","title":"The promizeLazy factory","description":"The current code of the promizeLazy factory function.","source":"@site/docs/vue-2-version/guide/promise-lazy-factory.md","sourceDirName":"vue-2-version/guide","slug":"/vue-2-version/guide/promise-lazy-factory","permalink":"/gmap-vue/docs/vue-2-version/guide/promise-lazy-factory","draft":false,"unlisted":false,"editUrl":"https://github.com/diegoazh/gmap-vue/docs/vue-2-version/guide/promise-lazy-factory.md","tags":[],"version":"current","frontMatter":{},"sidebar":"vue2Version","previous":{"title":"polyline","permalink":"/gmap-vue/docs/vue-2-version/guide/polyline"},"next":{"title":"rectangle","permalink":"/gmap-vue/docs/vue-2-version/guide/rectangle"}}');var t=o(6070),i=o(7252);const s={},a="The promizeLazy factory",c={},l=[];function d(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"the-promizelazy-factory",children:"The promizeLazy factory"})}),"\n",(0,t.jsxs)(n.p,{children:["The current code of the ",(0,t.jsx)(n.code,{children:"promizeLazy"})," factory function."]}),"\n",(0,t.jsxs)(n.p,{children:["You can find the API documentation ",(0,t.jsx)(n.a,{href:"/code/utils/factories/promise-lazy.html",children:"here"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { getLazyValue } from '../helpers';\n\nfunction getPromiseLazyCreatorFn(googleMapsApiInitializer, GoogleMapsApi) {\n  const promiseLazyCreator = (options) => {\n    /**\n     * Things to do once the API is loaded\n     *\n     * @returns {Object} the Google Maps API object\n     */\n    function onMapsReady() {\n      GoogleMapsApi.isReady = true;\n      return window.google;\n    }\n\n    // If library should load the API\n    if (options.load) {\n      return getLazyValue(() => {\n        // This will only be evaluated once\n        if (typeof window === 'undefined') {\n          // server side -- never resolve this promise\n          return new Promise(() => {}).then(onMapsReady);\n        }\n\n        return new Promise((resolve, reject) => {\n          try {\n            window.GoogleMapsCallback = resolve;\n            googleMapsApiInitializer(options.load, options.loadCn);\n          } catch (err) {\n            reject(err);\n          }\n        }).then(onMapsReady);\n      });\n    }\n\n    // If library should not handle API, provide\n    // end-users with the global `GoogleMapsCallback: () => undefined`\n    // when the Google Maps API has been loaded\n    const promise = new Promise((resolve) => {\n      if (typeof window === 'undefined') {\n        // Do nothing if run from server-side\n        return;\n      }\n      window.GoogleMapsCallback = resolve;\n    }).then(onMapsReady);\n\n    return getLazyValue(() => promise);\n  };\n\n  return promiseLazyCreator;\n}\n\nexport default getPromiseLazyCreatorFn;\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},7252:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var r=o(758);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);