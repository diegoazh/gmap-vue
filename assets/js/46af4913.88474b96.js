"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4373],{653:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"vue-2-version/guide/map-element-factory","title":"The mapElement factory","description":"The current code of the mapElement factory function.","source":"@site/docs/vue-2-version/guide/map-element-factory.md","sourceDirName":"vue-2-version/guide","slug":"/vue-2-version/guide/map-element-factory","permalink":"/gmap-vue/docs/vue-2-version/guide/map-element-factory","draft":false,"unlisted":false,"editUrl":"https://github.com/diegoazh/gmap-vue/docs/vue-2-version/guide/map-element-factory.md","tags":[],"version":"current","frontMatter":{},"sidebar":"vue2Version","previous":{"title":"kml-layer","permalink":"/gmap-vue/docs/vue-2-version/guide/kml-layer"},"next":{"title":"map","permalink":"/gmap-vue/docs/vue-2-version/guide/map"}}');var s=t(6070),r=t(7252);const i={},a="The mapElement factory",p={},c=[];function m(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"the-mapelement-factory",children:"The mapElement factory"})}),"\n",(0,s.jsxs)(n.p,{children:["The current code of the ",(0,s.jsx)(n.code,{children:"mapElement"})," factory function."]}),"\n",(0,s.jsxs)(n.p,{children:["You can find the API documentation ",(0,s.jsx)(n.a,{href:"/code/utils/factories/map-element.html",children:"here"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import MapElementMixin from '../../mixins/map-element';\nimport {\n  bindEvents,\n  bindProps,\n  getPropsValues,\n  mappedPropsToVueProps,\n} from '../helpers';\n\nfunction _assert(v, message) {\n  if (!v) throw new Error(message);\n}\n\nfunction mapElement(providedOptions) {\n  const {\n    mappedProps,\n    name,\n    ctr,\n    ctrArgs,\n    events,\n    beforeCreate,\n    afterCreate,\n    props,\n    ...rest\n  } = providedOptions;\n\n  const promiseName = `$${name}Promise`;\n  const instanceName = `$${name}Object`;\n\n  _assert(!(props instanceof Array), '`props` should be an object, not Array');\n\n  return {\n    ...(typeof GENERATE_DOC !== 'undefined'\n      ? { $vgmOptions: providedOptions }\n      : {}),\n    mixins: [MapElementMixin],\n    props: {\n      ...props,\n      ...mappedPropsToVueProps(mappedProps),\n    },\n    render() {\n      return '';\n    },\n    provide() {\n      const promise = this.$mapPromise\n        .then((map) => {\n          // Infowindow needs this to be immediately available\n          this.$map = map;\n\n          // Initialize the maps with the given options\n          const initialOptions = {\n            ...this.options,\n            map,\n            ...getPropsValues(this, mappedProps),\n          };\n          // don't use delete keyword in order to create a more predictable code for the engine\n          const { options: extraOptions, ...finalOptions } = initialOptions; // delete the extra options\n          const options = finalOptions;\n\n          if (beforeCreate) {\n            const result = beforeCreate.bind(this)(options);\n\n            if (result instanceof Promise) {\n              return result.then(() => ({ options }));\n            }\n          }\n          return { options };\n        })\n        .then(({ options }) => {\n          const ConstructorObject = ctr();\n          // https://stackoverflow.com/questions/1606797/use-of-apply-with-new-operator-is-this-possible\n          this[instanceName] = ctrArgs\n            ? new (Function.prototype.bind.call(\n                ConstructorObject,\n                null,\n                ...ctrArgs(options, getPropsValues(this, props || {}))\n              ))()\n            : new ConstructorObject(options);\n\n          bindProps(this, this[instanceName], mappedProps);\n          bindEvents(this, this[instanceName], events);\n\n          if (afterCreate) {\n            afterCreate.bind(this)(this[instanceName]);\n          }\n          return this[instanceName];\n        });\n\n      this[promiseName] = promise;\n      return { [promiseName]: promise };\n    },\n    destroyed() {\n      // Note: not all Google Maps components support maps\n      if (this[instanceName] && this[instanceName].setMap) {\n        this[instanceName].setMap(null);\n      }\n    },\n    ...rest,\n  };\n}\n\nexport default mapElement;\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},7252:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(758);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);