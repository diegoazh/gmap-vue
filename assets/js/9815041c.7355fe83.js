"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[962],{7341:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"vue-2-version/guide/cluster","title":"cluster","description":"Description","source":"@site/docs/vue-2-version/guide/cluster.md","sourceDirName":"vue-2-version/guide","slug":"/vue-2-version/guide/cluster","permalink":"/gmap-vue/docs/vue-2-version/guide/cluster","draft":false,"unlisted":false,"editUrl":"https://github.com/diegoazh/gmap-vue/docs/vue-2-version/guide/cluster.md","tags":[],"version":"current","frontMatter":{},"sidebar":"vue2Version","previous":{"title":"circle","permalink":"/gmap-vue/docs/vue-2-version/guide/circle"},"next":{"title":"drawing-manager","permalink":"/gmap-vue/docs/vue-2-version/guide/drawing-manager"}}');var r=t(6070),o=t(7252);const i={},c=void 0,l={},a=[{value:"Description",id:"description",level:2},{value:"Variables",id:"variables",level:2},{value:"Source code",id:"source-code",level:2},{value:"How to use it",id:"how-to-use-it",level:2},{value:"HTML examples",id:"html-examples",level:2},{value:"Test the component",id:"test-the-component",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.p,{children:"This component helps you to create a cluster of markers on Google Maps API."}),"\n",(0,r.jsxs)(n.p,{children:["For more information read the Google Maps documentation\nfor ",(0,r.jsx)(n.a,{href:"https://developers.google.com/maps/documentation/javascript/marker-clustering",children:"clustering"}),"."]}),"\n",(0,r.jsxs)(n.admonition,{type:"warning",children:[(0,r.jsxs)(n.p,{children:["To use this component you need to have installed ",(0,r.jsx)(n.code,{children:"@googlemaps/markerclusterer"})]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"\nnpm install --save @googlemaps/markerclusterer\n\n"})})]}),"\n",(0,r.jsxs)(n.admonition,{type:"warning",children:[(0,r.jsxs)(n.p,{children:["This component ",(0,r.jsx)(n.strong,{children:"must be manually imported"})]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// import globally use the Vue instance\nimport { components } from 'gmap-vue';\n\nVue.component('gmap-cluster', components.Cluster);\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// import locally inside your component\nimport { components } from "gmap-vue";\n\nexport default {\n  name: "MyCoolComponent",\n  data() {\n    return {\n      center: {\n        lat: 10.0,\n        lng: 10.0\n      },\n      markers: [\n        {\n          position: {\n            lat: 10.0,\n            lng: 10.0\n          }\n        },\n        {\n          position: {\n            lat: 11.0,\n            lng: 11.0\n          }\n        }\n      ]\n    };\n  },\n  components: {\n    "gmap-cluster": components.Cluster\n  }\n};\n'})})]}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsxs)(n.p,{children:["This component is exported in the ",(0,r.jsx)(n.code,{children:"components"})," object with the name ",(0,r.jsx)(n.code,{children:"Cluster"})]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import { components } from "gmap-vue";\n\nexport default {\n  ...\n  components: {\n    "gmap-cluster": components.Cluster\n  }\n};\n'})})]}),"\n",(0,r.jsx)(n.h2,{id:"variables",children:"Variables"}),"\n",(0,r.jsxs)(n.p,{children:["This component save the original cluster object provided by Google Maps in a property called ",(0,r.jsx)(n.code,{children:"$clusterObject"}),", as the\nexample below."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"this.$clusterObject = new MarkerClusterer(...);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"source-code",children:"Source code"}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:["Click to se the source code of ",(0,r.jsx)("code",{children:"cluster.vue"})," component"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-vue",children:"<template>\n  <div>\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nimport { MarkerClusterer } from '@googlemaps/markerclusterer';\nimport MapElementMixin from '../mixins/map-element';\nimport { clusterIconMappedProps } from '../utils/mapped-props-by-map-element';\nimport { bindEvents, getPropsValues, bindProps } from '../utils/helpers';\n\nexport default {\n  name: 'ClusterIcon',\n  mixins: [MapElementMixin],\n  provide() {\n    // events to bind with toWay\n    const events = [\n      'click',\n      'rightclick',\n      'dblclick',\n      'drag',\n      'dragstart',\n      'dragend',\n      'mouseup',\n      'mousedown',\n      'mouseover',\n      'mouseout',\n    ];\n\n    // Infowindow needs this to be immediately available\n    const promise = this.$mapPromise\n      .then((map) => {\n        this.$map = map;\n\n        // Initialize the maps with the given options\n        const initialOptions = {\n          ...this.options,\n          map,\n          ...getPropsValues(this, clusterIconMappedProps),\n        };\n        const { options: extraOptions, ...finalOptions } = initialOptions;\n\n        if (typeof MarkerClusterer === 'undefined') {\n          throw new Error(\n            'MarkerClusterer is not installed! require() it or include it from https://cdnjs.cloudflare.com/ajax/libs/js-marker-clusterer/1.0.0/markerclusterer.js'\n          );\n        }\n\n        const {\n          map: mapInstance,\n          markers,\n          algorithm,\n          onClusterClick,\n          renderer,\n        } = finalOptions;\n\n        this.$clusterObject = new MarkerClusterer({\n          map: mapInstance,\n          markers,\n          algorithm,\n          onClusterClick,\n          renderer,\n        });\n\n        bindProps(this, this.$clusterObject, {});\n        bindEvents(this, this.$clusterObject, events);\n\n        Object.keys({}).forEach((prop) => {\n          if ({}[prop].twoWay) {\n            this.$on(`${prop.toLowerCase()}_changed`, this.reinsertMarkers);\n          }\n        });\n\n        return this.$clusterObject;\n      })\n      .catch((error) => {\n        throw error;\n      });\n\n    this.$clusterPromise = promise;\n    return { $clusterPromise: promise };\n  },\n  props: {\n    algorithm: {\n      type: Object,\n      default: undefined,\n    },\n    onClusterClick: {\n      type: Function,\n      default: undefined,\n    },\n    renderer: {\n      type: Object,\n      default: undefined,\n    },\n    options: {\n      type: Object,\n      default: undefined,\n    },\n  },\n  beforeDestroy() {\n    this.$children.forEach((marker) => {\n      if (marker.$clusterObject === this.$clusterObject) {\n        marker.$clusterObject = null;\n      }\n    });\n\n    if (this.$clusterObject) {\n      this.$clusterObject.clearMarkers();\n    }\n  },\n  destroyed() {\n    if (this.$clusterObject && this.$clusterObject.setMap) {\n      this.$clusterObject.setMap(null);\n    }\n  },\n  updated() {\n    if (this.$clusterObject) {\n      this.$clusterObject.repaint();\n    }\n  },\n  methods: {\n    reinsertMarkers() {\n      const oldMarkers = this.$clusterObject.getMarkers();\n      this.$clusterObject.clearMarkers();\n      this.$clusterObject.addMarkers(oldMarkers);\n    },\n  },\n};\n<\/script>\n\n"})})]}),"\n",(0,r.jsxs)(n.p,{children:["If you need to know what are ",(0,r.jsx)(n.code,{children:"mappedProps"})," please read the general concepts of this\napplication ",(0,r.jsx)(n.a,{href:"/code/utils/mapped-props-by-map-element.html#autocompletemappedprops",children:"here"}),"."]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:["Mapped Props of ",(0,r.jsx)("code",{children:"GmapCluster"})," component"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"export const clusterIconMappedProps = {\n  algorithm: {\n    type: Object,\n  },\n  onClusterClick: {\n    type: Function,\n  },\n  renderer: {\n    type: Object,\n  },\n  options: {\n    type: Object,\n  },\n};\n"})})]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:["Events bound with to way on ",(0,r.jsx)("code",{children:"GmapCircle"})]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const events = [\n  'click',\n  'rightclick',\n  'dblclick',\n  'drag',\n  'dragstart',\n  'dragend',\n  'mouseup',\n  'mousedown',\n  'mouseover',\n  'mouseout',\n];\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"how-to-use-it",children:"How to use it"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-vue",children:'<template>\n  <gmap-map\n    :center="center"\n    :zoom="7"\n    style="width: 100%; height: 500px"\n  >\n    \x3c!-- use the default slot to pass markers to it --\x3e\n    <gmap-cluster></gmap-cluster>\n  </gmap-map>\n</template>\n'})}),"\n",(0,r.jsxs)(n.p,{children:["If you need to know the ",(0,r.jsx)(n.strong,{children:"API of this component"})," please read it ",(0,r.jsx)(n.a,{href:"/code/components/cluster-icon.html",children:"here"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"html-examples",children:"HTML examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<body>\n  <div id="root">\n    <gmap-map :center="center" :zoom="7" style="width: 100%; height: 500px">\n      <gmap-cluster>\n        <gmap-marker v-for="(m, index) in markers"\n          :position="m.position"\n          :clickable="true" :draggable="true"\n          @click="center=m.position"\n          :key="index"\n          ></gmap-marker>\n      </gmap-cluster>\n    </gmap-map>\n  </div>\n\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.11/vue.js"><\/script>\n  <script src="https://unpkg.com/@googlemaps/markerclusterer@1.0.13/dist/index.min.js"><\/script>\n  <script src="https://cdn.jsdelivr.net/npm/gmap-vue@1.2.2/dist/gmap-vue.min.js"><\/script>\n\n  <script>\n    Vue.use(GmapVue, {\n      load: {\n        key: \'AIzaSyDf43lPdwlF98RCBsJOFNKOkoEjkwxb5Sc\'\n      },\n    });\n\n    Vue.component(\'gmap-cluster\', GmapVue.components.Cluster);\n\n    document.addEventListener(\'DOMContentLoaded\', function() {\n      new Vue({\n        el: \'#root\',\n        data: {\n          center: {\n            lat: 10.0,\n            lng: 10.0\n          },\n          markers: [{\n            position: {\n              lat: 10.0,\n              lng: 10.0\n            }\n          }, {\n            position: {\n              lat: 11.0,\n              lng: 11.0\n            }\n          }]\n        },\n      });\n    });\n  <\/script>\n</body>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"test-the-component",children:"Test the component"}),"\n",(0,r.jsx)(n.admonition,{title:"Click to see the html example in action",type:"note",children:(0,r.jsx)("eg-base",{children:(0,r.jsx)("eg-basic-marker-cluster",{})})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},7252:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var s=t(758);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);