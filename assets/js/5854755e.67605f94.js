"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6485],{5984:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"vue-2-version/guide/polyline","title":"polyline","description":"Description","source":"@site/docs/vue-2-version/guide/polyline.md","sourceDirName":"vue-2-version/guide","slug":"/vue-2-version/guide/polyline","permalink":"/gmap-vue/docs/vue-2-version/guide/polyline","draft":false,"unlisted":false,"editUrl":"https://github.com/diegoazh/gmap-vue/docs/vue-2-version/guide/polyline.md","tags":[],"version":"current","frontMatter":{},"sidebar":"vue2Version","previous":{"title":"polygon","permalink":"/gmap-vue/docs/vue-2-version/guide/polygon"},"next":{"title":"The promizeLazy factory","permalink":"/gmap-vue/docs/vue-2-version/guide/promise-lazy-factory"}}');var i=t(6070),l=t(7252);const s={},a=void 0,r={},p=[{value:"Description",id:"description",level:2},{value:"Variables",id:"variables",level:2},{value:"Source code",id:"source-code",level:2},{value:"How to use it",id:"how-to-use-it",level:2},{value:"HTML examples",id:"html-examples",level:2},{value:"Test the component",id:"test-the-component",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"This component helps you to create a polyline on Google Maps API."}),"\n",(0,i.jsxs)(n.p,{children:["For more information read the Google Maps documentation\nfor ",(0,i.jsx)(n.a,{href:"https://developers.google.com/maps/documentation/javascript/examples/polyline-simple",children:"polyline"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["It is exported with the name ",(0,i.jsx)(n.code,{children:"GmapPolyline"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"variables",children:"Variables"}),"\n",(0,i.jsxs)(n.p,{children:["This component save the original polygon object provided by Google Maps in a property called ",(0,i.jsx)(n.code,{children:"$polylineObject"}),", as the\nexample below."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"this.$polylineObject = new google.maps.Polyline(...);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"source-code",children:"Source code"}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.mdxAdmonitionTitle,{children:["Click to se the source code of ",(0,i.jsx)("code",{children:"polyline.vue"})," component"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vue",children:"<script>\nimport mapElementMixin from '../mixins/map-element';\nimport { getPropsValues, bindEvents, bindProps } from '../utils/helpers';\nimport { polylineMappedProps } from '../utils/mapped-props-by-map-element';\n\nexport default {\n  mixins: [mapElementMixin],\n  props: {\n    deepWatch: {\n      type: Boolean,\n      default: false,\n    },\n    clickable: {\n      type: Boolean,\n      default: false,\n    },\n    draggable: {\n      type: Boolean,\n    },\n    editable: {\n      type: Boolean,\n    },\n    strokeColor: {\n      type: String,\n      default: '',\n    },\n    strokeOpacity: {\n      type: Number,\n      default: 1,\n    },\n    strokeWeight: {\n      type: Number,\n      default: 1,\n    },\n    visible: {\n      type: Boolean,\n      default: true,\n    },\n    options: {\n      type: Object,\n    },\n    path: {\n      type: Array,\n    },\n  },\n  provide() {\n    const events = [\n      'click',\n      'dblclick',\n      'drag',\n      'dragend',\n      'dragstart',\n      'mousedown',\n      'mousemove',\n      'mouseout',\n      'mouseover',\n      'mouseup',\n      'rightclick',\n    ];\n\n    const promise = this.$mapPromise\n      .then((map) => {\n        this.$map = map;\n\n        const initialOptions = {\n          ...this.options,\n          map,\n          ...getPropsValues(this, polylineMappedProps),\n        };\n        const { options: extraOptions, ...finalOptions } = initialOptions;\n\n        this.$polylineObject = new google.maps.Polyline(finalOptions);\n\n        bindProps(this, this.$polylineObject, polylineMappedProps);\n        bindEvents(this, this.$polylineObject, events);\n\n        let clearEvents = () => {};\n\n        this.$watch(\n          'path',\n          (path) => {\n            if (path) {\n              clearEvents();\n\n              this.$polylineObject.setPath(path);\n\n              const mvcPath = this.$polylineObject.getPath();\n              const eventListeners = [];\n\n              const updatePaths = () => {\n                this.$emit('path_changed', this.$polylineObject.getPath());\n              };\n\n              eventListeners.push([\n                mvcPath,\n                mvcPath.addListener('insert_at', updatePaths),\n              ]);\n              eventListeners.push([\n                mvcPath,\n                mvcPath.addListener('remove_at', updatePaths),\n              ]);\n              eventListeners.push([\n                mvcPath,\n                mvcPath.addListener('set_at', updatePaths),\n              ]);\n\n              clearEvents = () => {\n                eventListeners.forEach(([, listenerHandle]) => {\n                  google.maps.event.removeListener(listenerHandle);\n                });\n              };\n            }\n          },\n          {\n            deep: this.deepWatch,\n            immediate: true,\n          }\n        );\n\n        return this.$polylineObject;\n      })\n      .catch((error) => {\n        throw error;\n      });\n\n    this.$polylinePromise = promise;\n    return { $polylinePromise: promise };\n  },\n};\n<\/script>\n"})})]}),"\n",(0,i.jsxs)(n.p,{children:["If you need to know what are ",(0,i.jsx)(n.code,{children:"mappedProps"})," please read the general concepts of this\napplication ",(0,i.jsx)(n.a,{href:"/code/utils/mapped-props-by-map-element.html#autocompletemappedprops",children:"here"}),"."]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.mdxAdmonitionTitle,{children:["Mapped Props of ",(0,i.jsx)("code",{children:"GmapPolyline"})," component"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"export const polylineMappedProps = {\n  clickable: {\n    type: Boolean,\n    noBind: true,\n  },\n  draggable: {\n    type: Boolean,\n  },\n  editable: {\n    type: Boolean,\n  },\n  strokeColor: {\n    type: String,\n    noBind: true,\n  },\n  strokeOpacity: {\n    type: Number,\n    noBind: true,\n  },\n  strokeWeight: {\n    type: Number,\n    noBind: true,\n  },\n  visible: {\n    type: Boolean,\n  },\n  options: {\n    twoWay: false,\n    type: Object,\n  },\n  path: {\n    type: Array,\n    twoWay: true,\n  },\n};\n"})})]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.mdxAdmonitionTitle,{children:["Events bound with to way on ",(0,i.jsx)("code",{children:"GmapPolyline"})]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const events = [\n  'click',\n  'dblclick',\n  'drag',\n  'dragend',\n  'dragstart',\n  'mousedown',\n  'mousemove',\n  'mouseout',\n  'mouseover',\n  'mouseup',\n  'rightclick',\n];\n"})})]}),"\n",(0,i.jsx)(n.h2,{id:"how-to-use-it",children:"How to use it"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vue",children:'<template>\n  <gmap-map\n    :center="center"\n    :zoom="12"\n    style="width: 100%; height: 500px"\n    ref="map">\n    <gmap-polyline\n      v-if="path.length > 0"\n      :path="path"\n      :editable="true"\n      @path_changed="updateEdited($event)"\n      @rightclick="handleClickForDelete"\n      ref="polyline">\n    </gmap-polyline>\n  </gmap-map>\n</template>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If you need to know the ",(0,i.jsx)(n.strong,{children:"API of this component"})," please read it ",(0,i.jsx)(n.a,{href:"/code/components/polyline-shape.html",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"html-examples",children:"HTML examples"}),"\n",(0,i.jsx)(n.admonition,{title:"Simple polyline example",type:"note",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<body>\n  <div id="root">\n    <label>\n      Start at:\n      <gmap-autocomplete @place_changed="updateCenter($event)" />\n    </label>\n\n    <gmap-map :center="center" :zoom="12" style="width: 100%; height: 500px" ref="map">\n      <gmap-polyline v-if="path.length > 0" :path="path" :editable="true" @path_changed="updateEdited($event)"\n          @rightclick="handleClickForDelete"\n          ref="polyline">\n      </gmap-polyline>\n    </gmap-map>\n\n    <div>\n      <textarea :value="polylineGeojson" style="width: 100%; height: 200px"\n        @input="readGeojson">\n      </textarea>\n      <div v-if="errorMessage">{{errorMessage}}</div>\n    </div>\n  </div>\n\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.11/vue.js"><\/script>\n  <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.js"><\/script>\n  <script src="https://cdn.jsdelivr.net/npm/gmap-vue@1.2.2/dist/gmap-vue.min.js"><\/script>\n\n  <script>\n    Vue.use(GmapVue, {\n      load: {\n        key: \'AIzaSyDf43lPdwlF98RCBsJOFNKOkoEjkwxb5Sc\',\n        libraries: \'places\',\n      },\n    });\n\n    document.addEventListener(\'DOMContentLoaded\', function() {\n      window.XXX = new Vue({\n        el: \'#root\',\n        data: {\n          center: {lat: 1.38, lng: 103.8},\n          edited: null,\n          path: [\n            {lat: 1.33, lng: 103.75},\n            {lat: 1.43, lng: 103.85},\n          ],\n          mvcPath: null,\n          errorMessage: null,\n          polylineGeojson: \'\',\n        },\n        watch: {\n          polylinePath: _.throttle(function (path) {\n            if (path) {\n              this.path = path\n              this.polylineGeojson = JSON.stringify({\n                type: \'Polyline\',\n                coordinates: this.path.map(({lat, lng}) => [lng, lat])\n              }, null, 2)\n            }\n          }, 1000)\n        },\n        computed: {\n          polylinePath: function () {\n            if (!this.mvcPath) return null\n\n            let path = [];\n            for (let j=0; j<this.mvcPath.getLength(); j++) {\n              let point = this.mvcPath.getAt(j);\n              path.push({lat: point.lat(), lng: point.lng()});\n            }\n            return path\n          },\n        },\n        methods: {\n          updateCenter: function (place) {\n            this.center = {\n              lat: place.geometry.location.lat(),\n              lng: place.geometry.location.lng(),\n            }\n          },\n          updateEdited: function (mvcPath) {\n            this.mvcPath = mvcPath\n          },\n          handleClickForDelete($event) {\n            if ($event.vertex) {\n              this.$refs.polyline.$polylineObject.getPaths()\n                .getAt($event.path)\n                .removeAt($event.vertex)\n            }\n          },\n          readGeojson: function ($event) {\n            try {\n              this.polylineGeojson = $event.target.value\n\n              var v = JSON.parse($event.target.value);\n\n              this.path = v.coordinates\n                .map(([lng, lat]) => ({lat, lng}))\n\n              this.errorMessage = null\n            } catch (err) {\n              this.errorMessage = err.message\n            }\n          }\n        }\n      });\n    });\n  <\/script>\n</body>\n'})})}),"\n",(0,i.jsx)(n.h2,{id:"test-the-component",children:"Test the component"}),"\n",(0,i.jsx)("eg-base",{children:(0,i.jsx)("eg-polyline",{})})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},7252:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(758);const i={},l=o.createContext(i);function s(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);